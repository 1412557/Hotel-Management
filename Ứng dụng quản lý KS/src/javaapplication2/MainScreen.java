/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication2;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;

/**
 *
 * @author NhoxToong
 */
public class MainScreen extends javax.swing.JFrame {

    /**
     * Creates new form MainScreen
     */
    public MainScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ExitButton = new javax.swing.JButton();
        HelloUser = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        City = new javax.swing.JLabel();
        AveratePrice = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        Star = new javax.swing.JLabel();
        Announce = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListHotel = new javax.swing.JList<>();
        PriceComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        RoomType = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        RoomPrice = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        RoomLeft = new javax.swing.JLabel();
        BookRoom = new javax.swing.JButton();
        NgayThue = new javax.swing.JLabel();
        DatePicker = new com.toedter.calendar.JDateChooser();
        DayBook = new javax.swing.JComboBox<>();
        Date = new javax.swing.JLabel();
        GenerateBill = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        HelloUser.setText("jLabel1");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        City.setText("Thành phố");

        AveratePrice.setText("Tầm Giá");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        Star.setText("Sao");

        ListHotel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListHotelMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ListHotel);

        PriceComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<500", "500~1000", "1000~2000", ">2000" }));
        PriceComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("000 VNĐ");

        RoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoomTypeActionPerformed(evt);
            }
        });

        jLabel2.setText("Loại phòng");

        jLabel3.setText("Giá 1 ngày");

        jLabel4.setText("phòng còn");

        BookRoom.setText("Đặt phòng");
        BookRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookRoomActionPerformed(evt);
            }
        });

        NgayThue.setText("Ngày thuê");

        DatePicker.setDateFormatString("MM-dd-yyyy");

        DayBook.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30" }));
        DayBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DayBookActionPerformed(evt);
            }
        });

        Date.setText("Số ngày");

        GenerateBill.setText("Xuất hóa đơn");
        GenerateBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateBillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Announce, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(52, 52, 52))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(City)
                                    .addComponent(AveratePrice))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(39, 39, 39)
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(Star))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(PriceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(HelloUser, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ExitButton)
                        .addGap(51, 51, 51))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(GenerateBill)
                                    .addComponent(BookRoom))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(RoomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(112, 112, 112)
                                    .addComponent(RoomPrice))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(RoomLeft)))
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NgayThue)
                                    .addComponent(Date))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DayBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(49, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ExitButton)
                        .addComponent(HelloUser))
                    .addComponent(Announce, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(City)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Star))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PriceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AveratePrice)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(RoomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(RoomPrice))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(RoomLeft))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(NgayThue)
                            .addComponent(DatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DayBook, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                            .addComponent(Date))
                        .addGap(223, 223, 223))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(BookRoom)
                        .addGap(30, 30, 30)
                        .addComponent(GenerateBill)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        NewJFrame jfr = new NewJFrame();
        jfr.setVisible(true);
    }//GEN-LAST:event_ExitButtonActionPerformed
    public String CheckCasePrice(int i){
        switch(i){
            case 0: return "and giaTB <= 500000";
            case 1: return "and giaTB <= 1000000 and giaTB > 500000";
            case 2: return "and gia TB <= 2000000 and giaTB > 500000";
            case 3: return "and giaTB > 2000000";
        }
        return null;
    }
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        try{
             Connection conn = ConnectionUtils.getMyConnection();
        
        System.out.println("Get connection " + conn);
 
        System.out.println("Done!");
        
         String tp = jComboBox1.getSelectedItem().toString();
         int star = Integer.parseInt(jComboBox2.getSelectedItem().toString());
         
        String sql = "Select RTRIM(maKS),RTRIM(tenKS),soNha,RTRIM(duong),RTRIM(quan) from KhachSan where thanhPho = ? and soSao = ? " + CheckCasePrice(PriceComboBox.getSelectedIndex());
        PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setString(1, tp);
        pstm.setInt(2,star);
        
        ResultSet rs1 = pstm.executeQuery();
        
        DefaultListModel dlm = new DefaultListModel();
        ListHotel.setModel(dlm);
        while (rs1.next()){
            String maks = rs1.getString(1);
            String tenks = rs1.getString(2);
            int soNha = rs1.getInt(3);
            String duong = rs1.getString(4);
            String quan = rs1.getString(5);
            dlm.addElement(maks + " Khách Sạn "+ tenks +" số " +soNha+ " " + duong +" quận "+ quan +" TP "+tp);
        }
        ListHotel.setModel(dlm);
        }catch (ClassNotFoundException e){
            System.out.println("Error1 !!");
        }catch (SQLException a){
            System.out.println("Error2 !!");
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        try{
             Connection conn = ConnectionUtils.getMyConnection();
        
        System.out.println("Get connection " + conn);
 
        System.out.println("Done!");
        
        Statement stm = conn.createStatement();
        
         
         int star = Integer.parseInt(jComboBox2.getSelectedItem().toString());
         String tp = jComboBox1.getSelectedItem().toString();
         
        String sql = "Select RTRIM(maKS),RTRIM(tenKS),soNha,RTRIM(duong),RTRIM(quan) from KhachSan where thanhPho = ? and soSao = ? " + CheckCasePrice(PriceComboBox.getSelectedIndex());
        PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setString(1, tp);
        pstm.setInt(2,star);
        
        ResultSet rs1 = pstm.executeQuery();
        
        DefaultListModel dlm = new DefaultListModel();
        ListHotel.setModel(dlm);
        while (rs1.next()){
            String maks = rs1.getString(1);
            String tenks = rs1.getString(2);
            int soNha = rs1.getInt(3);
            String duong = rs1.getString(4);
            String quan = rs1.getString(5);
            dlm.addElement(maks + " Khách Sạn "+ tenks +" số " +soNha+ " " + duong +" quận "+ quan +" TP "+tp);
        }
        ListHotel.setModel(dlm);
        }catch (ClassNotFoundException e){
            System.out.println("Error1 !!");
        }catch (SQLException a){
            System.out.println("Error2 !!");
        }

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
 
        try{
             Connection conn = ConnectionUtils.getMyConnection();
        
        System.out.println("Get connection " + conn);
 
        System.out.println("Done!");
        
        Statement stm = conn.createStatement();
        
        String sql = "Select distinct RTRIM(thanhPho) from KhachSan";
        ResultSet rs = stm.executeQuery(sql);
        while (rs.next()){
            String s = rs.getString(1);
            jComboBox1.addItem(s);
        }
        
         String tp = jComboBox1.getSelectedItem().toString();
         System.out.println(tp);
         
        String sql1 = "Select RTRIM(maKS),RTRIM(tenKS),soNha,RTRIM(duong),RTRIM(quan) from KhachSan where thanhPho = ? and soSao = 1 and giaTB < 500000";
        PreparedStatement pstm = conn.prepareStatement(sql1);
        pstm.setString(1, tp);
        ResultSet rs1 = pstm.executeQuery();
        
        DefaultListModel dlm = new DefaultListModel();
        while (rs1.next()){
            String maks = rs1.getString(1);
            String tenks = rs1.getString(2);
            int soNha = rs1.getInt(3);
            String duong = rs1.getString(4);
            String quan = rs1.getString(5);
            dlm.addElement(maks + " Khách Sạn "+ tenks +" số " +soNha+ " " + duong +" quận "+ quan +" TP "+tp);
        }
        ListHotel.setModel(dlm);
        }catch (ClassNotFoundException e){
            System.out.println("Error1 !!");
        }catch (SQLException a){
            System.out.println("Error2 !!");
        }
    }//GEN-LAST:event_formComponentShown

    private void PriceComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceComboBoxActionPerformed
        // TODO add your handling code here:
        try{
             Connection conn = ConnectionUtils.getMyConnection();
        
        System.out.println("Get connection " + conn);
 
        System.out.println("Done!");
        
        Statement stm = conn.createStatement();
        
         
         int star = Integer.parseInt(jComboBox2.getSelectedItem().toString());
         String tp = jComboBox1.getSelectedItem().toString();
         
        String sql = "Select RTRIM(maKS),RTRIM(tenKS),soNha,RTRIM(duong),RTRIM(quan) from KhachSan where thanhPho = ? and soSao = ? " + CheckCasePrice(PriceComboBox.getSelectedIndex());
        PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setString(1, tp);
        pstm.setInt(2,star);
        
        ResultSet rs1 = pstm.executeQuery();
        
        DefaultListModel dlm = new DefaultListModel();
        ListHotel.setModel(dlm);
        while (rs1.next()){
            String maks = rs1.getString(1);
            String tenks = rs1.getString(2);
            int soNha = rs1.getInt(3);
            String duong = rs1.getString(4);
            String quan = rs1.getString(5);
            dlm.addElement(maks + " Khách Sạn "+ tenks +" số " +soNha+ " " + duong +" quận "+ quan +" TP "+tp);
        }
        ListHotel.setModel(dlm);
        }catch (ClassNotFoundException e){
            System.out.println("Error1 !!");
        }catch (SQLException a){
            System.out.println("Error2 !!");
        }

    }//GEN-LAST:event_PriceComboBoxActionPerformed

    private void ListHotelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListHotelMouseClicked
        // TODO add your handling code here:
        String ks = ListHotel.getSelectedValue();
        String segment[] = ks.split(" ");
        String maks = segment[0];
        
        try{
        System.out.println("Get connection ... ");
        
        Connection conn = ConnectionUtils.getMyConnection();
        
        System.out.println("Get connection " + conn);
 
        System.out.println("Done!");
        
      //goi truy vấn
        String sql = "select RTRIM(maLoaiPHong), RTRIM(tenloaiPhong) from LoaiPhong where RTRIM(maKS) = ?";
        PreparedStatement pstm = conn.prepareStatement(sql);
        //truyền biến, truyền kiểu dữ liệu cho biến output
        pstm.setString(1,maks);
        
        ResultSet rs = pstm.executeQuery();
        RoomType.removeAllItems();
        
        while(rs.next()){
            String s = rs.getString(2);
            RoomType.addItem(s);
        }
        String sql1 = "select donGia,slTrong from LoaiPhong where RTRIM(maKS) = ? and RTRIM(tenloaiPhong) = ?";
        PreparedStatement pstm1 = conn.prepareStatement(sql1);
        
        pstm1.setString(1,maks);
        pstm1.setString(2,RoomType.getSelectedItem().toString());
        
        ResultSet rs1 = pstm1.executeQuery();
        while(rs1.next()){
        String dongia = Integer.toString(rs1.getInt(1));
        String sl = Integer.toString(rs1.getInt(2));
        System.out.println(dongia);
        RoomPrice.setText(dongia);
        RoomLeft.setText(sl);
        }
        
        
        
        }catch (ClassNotFoundException e){
            System.out.println("Error1 !!");
        }catch (SQLException a){
            System.out.println("Error2 !!");
        }
    }//GEN-LAST:event_ListHotelMouseClicked

    public String getmaloaiphong(String maks)
    {
        try{
        System.out.println("Get connection ... ");
        
        Connection conn = ConnectionUtils.getMyConnection();
        
        System.out.println("Get connection " + conn);
 
        System.out.println("Done!");
        
        String sql1 = "select donGia,slTrong,maLoaiPhong from LoaiPhong where RTRIM(maKS) = ? and RTRIM(tenloaiPhong) = ?";
        PreparedStatement pstm1 = conn.prepareStatement(sql1);
        
        pstm1.setString(1,maks);
        pstm1.setString(2,RoomType.getSelectedItem().toString());
        
        ResultSet rs1 = pstm1.executeQuery();
        while(rs1.next()){
        String maloaiphong = rs1.getString(3);
        System.out.println(maloaiphong);
        conn.close();
        return maloaiphong;
        
        }
        }catch (ClassNotFoundException e){
            return " ";
        }catch (SQLException a){
            return " ";
        }
        return "";
    }
    private void RoomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoomTypeActionPerformed
        // TODO add your handling code here:
        String ks = ListHotel.getSelectedValue();
        String segment[] = ks.split(" ");
        String maks = segment[0];
        String loaiphong = RoomType.getSelectedItem().toString();
        try{
        System.out.println("Get connection ... ");
        
        Connection conn = ConnectionUtils.getMyConnection();
        
        System.out.println("Get connection " + conn);
 
        System.out.println("Done!");
        String sql1 = "select donGia,slTrong,maLoaiPhong from LoaiPhong where RTRIM(maKS) = ? and RTRIM(tenloaiPhong) = ?";
        PreparedStatement pstm1 = conn.prepareStatement(sql1);
        
        pstm1.setString(1,maks);
        pstm1.setString(2,RoomType.getSelectedItem().toString());
        
        ResultSet rs1 = pstm1.executeQuery();
        while(rs1.next()){
        String dongia = Integer.toString(rs1.getInt(1));
        String sl = Integer.toString(rs1.getInt(2));
        String maloaiphong = rs1.getString(3);
        System.out.println(dongia);
        System.out.println(maloaiphong);
        RoomPrice.setText(dongia);
        RoomLeft.setText(sl);
        }
        
        }catch (ClassNotFoundException e){
            System.out.println("Error1 !!");
        }catch (SQLException a){
            System.out.println("Error2 !!");
        }
    }//GEN-LAST:event_RoomTypeActionPerformed

    private void BookRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookRoomActionPerformed
        // TODO add your handling code here:
        String ks = ListHotel.getSelectedValue();
        String segment[] = ks.split(" ");
        String maks = segment[0];
        System.out.println(maks);
        SimpleDateFormat fmt = new SimpleDateFormat("MM/dd/yyyy");
        String date = fmt.format(DatePicker.getDate());
        System.out.println(date);
        int daysBook = Integer.parseInt(DayBook.getSelectedItem().toString());
        String Greetings = HelloUser.getText();
        String segment1[] = Greetings.split(" ");
        String id = segment1[segment1.length - 1];
        System.out.println(id);
        System.out.println(RoomType.getSelectedItem().toString());
        
        //ket noi sql
        
        
        String maloaiphong = getmaloaiphong(maks);
        BookRoom(maks,maloaiphong,id,date,daysBook);
    }//GEN-LAST:event_BookRoomActionPerformed

    public void BookRoom(String maks, String maloaiphong, String id, String date, int daysBook)
    {
        try{
        
        //ket noi sql
        
        
        System.out.println("Get connection ... ");
        
        Connection conn = ConnectionUtils.getMyConnection();
        
        System.out.println("Get connection " + conn);
 
        System.out.println("Done!");
      //goi procedure 
        String sql = //"Select maKH, hoTen, tenDangNhap, matKhau, soCMND, diaChi, soDienThoai, moTa, email from KhachHang";
              "{call spBookRoom (?,?,?,?,?,?)}";
      CallableStatement cstm = conn.prepareCall(sql);
      int songaythue = 4;
      cstm.setString(1,maks);
      cstm.setString(2,maloaiphong);
      cstm.setString(3,id);
      cstm.setString(4,date);
      cstm.setInt(5,daysBook);
      cstm.registerOutParameter(6, java.sql.Types.INTEGER);
      
      cstm.executeUpdate();
        
        System.out.println("status:" + cstm.getInt(6));//1 : succeed 0:fail
        if (cstm.getInt(6) == 1){
            System.out.println("succeed");
            conn.close();
        }
        else{
            System.out.println("fail");
            conn.close();
        }
        
        }catch (ClassNotFoundException e){
            System.out.println("Error1 !!");
        }catch (SQLException a){
            System.out.println("Error2 !!");
        }
        
    }
    private void DayBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DayBookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DayBookActionPerformed

    private void GenerateBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateBillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GenerateBillActionPerformed

    public static boolean isNumeric(String s)
    {
        try
        {
            double d = Double.parseDouble(s);
        }catch (NumberFormatException nfe)
        {
            return false;
        }
        return true;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Announce;
    private javax.swing.JLabel AveratePrice;
    private javax.swing.JButton BookRoom;
    private javax.swing.JLabel City;
    private javax.swing.JLabel Date;
    private com.toedter.calendar.JDateChooser DatePicker;
    private javax.swing.JComboBox<String> DayBook;
    private javax.swing.JButton ExitButton;
    private javax.swing.JButton GenerateBill;
    public static javax.swing.JLabel HelloUser;
    private javax.swing.JList<String> ListHotel;
    private javax.swing.JLabel NgayThue;
    private javax.swing.JComboBox<String> PriceComboBox;
    private javax.swing.JLabel RoomLeft;
    private javax.swing.JLabel RoomPrice;
    private javax.swing.JComboBox<String> RoomType;
    private javax.swing.JLabel Star;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
